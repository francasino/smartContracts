This file is to explain the general overview of the framework and to understand it.

After installing all stuff, what we will do always will be:

1. Open one terminal and start ganache-cli by writing:
ganache-cli
1.1 This is an independent terminal that will be always running. Note that ETH is created dynamically each time so we will get a fresh ETH blockchain each time we call it.
1.2 In chrome, we have to add an account of our local blockchain to interact with it, otherwise is impossible. So, we will copy a secret key of one of the accounts in ganache and we will go to metamask and import a new account using it. Thereafter, we will use that new account for tests. 

2. In another terminal, when we want to deploy a new project for a smart contract we will do the following.
  2.1 Create and empty directory
  2.2 Open a terminal in that directory and write 
    truffle unbox pet-shop
  2.3 What this does is to create a new project with all needed files required to deploy the SC and play with it, we dont need to worry about anything else. There is also the option to do "truffle unbox" but adding pet-shop gives us an example with needed files to do a JS web application with few effort.
  2.4 We may open with sublime text the folder of the project by writing "subl ." in terminal. This way we have a general overview.
  2.5 Follow this to install solidity interpreter in sublime, is necessary https://medium.com/coinmonks/ethereum-solidity-language-syntax-in-sublime-1532e6f3646d
  2.6 Now we create a new file in /contacts, named "something.sol" this will be our smart contract.
  2.7 We will create a file in /migrations named 2_deploy_something.js that will have the deployment details. This requires few lines of code
  
  
3. From now on, when we add the code of our contract, we will always do the same to compile and test it:
truffle migrate --reset     (this builds, compiles and deploys the SC in the eth blockchain. The --reset is to clean registers and transactions)

Then, we can do two things to test our code
1. truffle console   (to write clauses and code on the fly)
2. truffle test    (that will execute the JS code that we have predefined in our /test folder) It uses very intuitive clauses and structure. 

Every time we log in the system and want to play with our SCs, basically we will edit the code of our SC, do truffle migrate --reset  and thats it


4. About the web interface, we will use basically the index.html and the app.js files that you can find in /src and /js 

That's it to understand the framework. So basically the /contracts /migrations and /src folders are relevant. Also the /test folder to play with our SC


  
